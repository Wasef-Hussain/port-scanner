# scanner/report.py
import csv, json
from pathlib import Path
from typing import List, Dict

try:
    from reportlab.lib.pagesizes import letter
    from reportlab.platypus import SimpleDocTemplate, Table, TableStyle
    from reportlab.lib import colors
    REPORTLAB_AVAILABLE = True
except Exception:
    REPORTLAB_AVAILABLE = False

def export_csv(results: List[Dict], filename: str) -> None:
    keys = ["ip", "port", "open", "service", "banner", "timestamp"]
    with open(filename, "w", newline="", encoding="utf-8") as f:
        w = csv.DictWriter(f, keys)
        w.writeheader()
        for r in results: w.writerow({k: r.get(k, "") for k in keys})

def export_json(results: List[Dict], filename: str) -> None:
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(results, f, indent=2, ensure_ascii=False)

def export_pdf(results: List[Dict], filename: str) -> None:
    if not REPORTLAB_AVAILABLE:
        return

    from reportlab.lib.pagesizes import letter
    from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph, Spacer
    from reportlab.lib.styles import getSampleStyleSheet
    from reportlab.lib import colors

    # Styles
    styles = getSampleStyleSheet()
    title_style = styles["Title"]
    normal_style = styles["Normal"]

    # Document setup
    doc = SimpleDocTemplate(
        filename,
        pagesize=letter,
        rightMargin=30, leftMargin=30,
        topMargin=30, bottomMargin=30,
        title="Port Scan Report"
    )

    # Title & metadata
    elements = []
    elements.append(Paragraph("Port Scan Report", title_style))
    elements.append(Paragraph("Generated by PyPortScanner â€” Made by Wasef Hussain", normal_style))
    elements.append(Spacer(1, 12))

    # Table data
    table_data = [["IP", "Port", "Open", "Service", "Banner"]]
    for r in results:
        banner_text = (r.get("banner") or "").replace("\n", " ")[:100]  
        table_data.append([
            r["ip"],
            str(r["port"]),
            "Yes" if r["open"] else "No",
            r.get("service", ""),
            banner_text
        ])

    # Table object
    table = Table(table_data, colWidths=[90, 40, 40, 100, 220])  # adjust column widths
    style = TableStyle([
        ("BACKGROUND", (0,0), (-1,0), colors.HexColor("#444444")),
        ("TEXTCOLOR", (0,0), (-1,0), colors.whitesmoke),
        ("ALIGN", (0,0), (-1,-1), "CENTER"),
        ("FONTNAME", (0,0), (-1,0), "Helvetica-Bold"),
        ("FONTSIZE", (0,0), (-1,0), 10),
        ("BOTTOMPADDING", (0,0), (-1,0), 8),
        ("GRID", (0,0), (-1,-1), 0.25, colors.black),
        ("FONTSIZE", (0,1), (-1,-1), 8),
        ("ALIGN", (1,1), (1,-1), "RIGHT"),   # align port numbers right
        ("ALIGN", (2,1), (2,-1), "CENTER"), # open/closed center
        ("VALIGN", (0,0), (-1,-1), "MIDDLE")
    ])
    table.setStyle(style)

    # Add table to doc
    elements.append(table)

    # Build PDF
    doc.build(elements)
